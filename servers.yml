AWSTemplateFormatVersion: 2010-09-09
Description: Launching Servers

Parameters:
  EnvironmentName:
    Type: String
  RolePolicy: 
    Type: String
  AmiId:
    Type: String
  InstanceType:
    Type: String
  BucketName:
    Type: String

Resources:

  RoleForS3FullAccess:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - !Ref RolePolicy

  ServerInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Roles: 
        - Ref: RoleForS3FullAccess

  LoadBalancerSecGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Allow outbound traffic on port 80 and restrict inbound to port 80
      VpcId: 
        Fn::ImportValue: 
          !Sub ${EnvironmentName}-VPCID 
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  WebAppSecGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Allow all outbound traffic and restrict inbound to port 80 
      VpcId: 
        Fn::ImportValue: 
          !Sub ${EnvironmentName}-VPCID 
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0

  LaunchConfig:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      ImageId: !Ref AmiId
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref ServerInstanceProfile
      SecurityGroups: 
      - Ref: WebAppSecGroup
      BlockDeviceMappings:
      - DeviceName: "/dev/sdk"
        Ebs:
          VolumeSize: '10'
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update -y
          apt-get install apache2 -y
          systemctl start apache2.service
          cd /var/www/html
          echo "it works! Udagram, Udacity" > index.html

  WebAppTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 5
      Port: 80
      Protocol: HTTP
      VpcId: 
        Fn::ImportValue:
          !Sub ${EnvironmentName}-VPCID

  WebAppGroup:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      VPCZoneIdentifier:
      - Fn::ImportValue: 
          !Sub "${EnvironmentName}-PRIVATE-SUBNETS"
      LaunchConfigurationName: !Ref LaunchConfig
      MinSize: 4
      MaxSize: 4
      TargetGroupARNs:
      - Ref: WebAppTargetGroup
  
  WebAppLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
      - Fn::ImportValue: !Sub "${EnvironmentName}-PUBLIC-SUBNET-1"
      - Fn::ImportValue: !Sub "${EnvironmentName}-PUBLIC-SUBNET-2"
      SecurityGroups:
      - Ref: LoadBalancerSecGroup

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: WebAppTargetGroup
      LoadBalancerArn:
        Ref: WebAppLoadBalancer
      Port: '80'
      Protocol: HTTP

  ListenerRule:
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
      Properties:
        Actions:
        - Type: forward
          TargetGroupArn: !Ref 'WebAppTargetGroup'
        Conditions:
        - Field: path-pattern
          Values: [/]
        ListenerArn: !Ref 'Listener'
        Priority: 1

Outputs:
  LoadBalancerUrl:
    Value: !Sub 
      - 'http://${DNS}'
      - DNS: !GetAtt WebAppLoadBalancer.DNSName
    Export:
      Name: !Sub ${EnvironmentName}-LB-URL

  